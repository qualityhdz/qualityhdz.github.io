(function($){
  "use strict";

  $.fn.counterUp = function(options){
    var settings = $.extend({time:400, delay:10}, options);

    return this.each(function(){
      var $this = $(this);

      // Store the original target number once
      if (!$this.data('counterup-target')){
        $this.data('counterup-target', $this.text());
      }

      // Only animate once
      if ($this.data('counted')) return;

      var counterFunc = function(){
        $this.data('counted', true); // mark as counted

        var text = $this.data('counterup-target'),
            nums = [],
            divisions = settings.time / settings.delay,
            hasComma = /[0-9]+,[0-9]+/.test(text);

        text = text.replace(/,/g,"");
        var isInt = /^[0-9]+$/.test(text),
            isFloat = /^[0-9]+\.[0-9]+$/.test(text),
            decimals = isFloat ? (text.split(".")[1] || []).length : 0;

        for(var i = divisions; i >= 1; i--){
          var num = parseInt(text / divisions * i);
          if(isFloat) num = parseFloat(text / divisions * i).toFixed(decimals);
          if(hasComma){
            while(/(\d+)(\d{3})/.test(num.toString())){
              num = num.toString().replace(/(\d+)(\d{3})/, "$1,$2");
            }
          }
          nums.unshift(num);
        }

        $this.data('counterup-nums', nums);
        $this.text("0");

        var run = function(){
          $this.text($this.data('counterup-nums').shift());
          if($this.data('counterup-nums').length){
            setTimeout($this.data('counterup-func'), settings.delay);
          } else {
            $this.removeData('counterup-nums');
            $this.removeData('counterup-func');
          }
        };

        $this.data('counterup-func', run);
        setTimeout($this.data('counterup-func'), settings.delay);
      };

      $this.waypoint(counterFunc, { offset: '100%', triggerOnce: true });
    });
  };

})(jQuery);